<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>彭真进的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pengzhenjin.top/"/>
  <updated>2019-09-02T01:58:08.780Z</updated>
  <id>http://pengzhenjin.top/</id>
  
  <author>
    <name>彭真进</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java虚拟机（四）：虚拟机类加载机制</title>
    <link href="http://pengzhenjin.top/2019/09/04/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    <id>http://pengzhenjin.top/2019/09/04/Java虚拟机（四）：虚拟机类加载机制/</id>
    <published>2019-09-03T16:00:00.000Z</published>
    <updated>2019-09-02T01:58:08.780Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;虚拟机把描述类的数据从 Class 文件加载到内存，并对数据进行校验、装换解析和初始化，最终形成可以被虚拟机直接使用的 Java 类型。&lt;/p&gt;&lt;p&gt;在 Java 语言中，类型的加载、连接和初始化过程都是在程序运行期间完成的。&lt;/p&gt;&lt;h3 id=&quot;类加载时机&quot;&gt;&lt;a href=&quot;#类加载时机&quot; class=&quot;headerlink&quot; title=&quot;类加载时机&quot;&gt;&lt;/a&gt;类加载时机&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;jvm-chapter-4/img1.jpg&quot; alt&gt;&lt;/p&gt;&lt;p&gt;其中加载、验证、准备、初始化和卸载这五个阶段的顺序是确定的。解析阶段可以在初始化之后再开始(运行时绑定或动态绑定或晚期绑定)。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://pengzhenjin.top/categories/java/"/>
    
    
      <category term="java" scheme="http://pengzhenjin.top/tags/java/"/>
    
      <category term="jvm" scheme="http://pengzhenjin.top/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>Java虚拟机（三）：Java内存模型与线程</title>
    <link href="http://pengzhenjin.top/2019/09/03/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9AJava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
    <id>http://pengzhenjin.top/2019/09/03/Java虚拟机（三）：Java内存模型与线程/</id>
    <published>2019-09-02T16:00:00.000Z</published>
    <updated>2019-09-01T09:56:11.008Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;jvm-chapter-3/img1.jpg&quot; alt&gt;&lt;/p&gt;&lt;h3 id=&quot;Java-内存模型&quot;&gt;&lt;a href=&quot;#Java-内存模型&quot; class=&quot;headerlink&quot; title=&quot;Java 内存模型&quot;&gt;&lt;/a&gt;Java 内存模型&lt;/h3&gt;&lt;p&gt;屏蔽掉各种硬件和操作系统的内存访问差异。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;jvm-chapter-3/img2.jpg&quot; alt&gt;&lt;/p&gt;&lt;h4 id=&quot;主内存和工作内存之间的交互&quot;&gt;&lt;a href=&quot;#主内存和工作内存之间的交互&quot; class=&quot;headerlink&quot; title=&quot;主内存和工作内存之间的交互&quot;&gt;&lt;/a&gt;主内存和工作内存之间的交互&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;作用对象&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;lock&lt;/td&gt;
&lt;td&gt;主内存&lt;/td&gt;
&lt;td&gt;把一个变量标识为一条线程独占的状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unlock&lt;/td&gt;
&lt;td&gt;主内存&lt;/td&gt;
&lt;td&gt;把一个处于锁定状态的变量释放出来，释放后才可被其他线程锁定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;主内存&lt;/td&gt;
&lt;td&gt;把一个变量的值从主内存传输到线程工作内存中，以便 load 操作使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;load&lt;/td&gt;
&lt;td&gt;工作内存&lt;/td&gt;
&lt;td&gt;把 read 操作从主内存中得到的变量值放入工作内存中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;use&lt;/td&gt;
&lt;td&gt;工作内存&lt;/td&gt;
&lt;td&gt;把工作内存中一个变量的值传递给执行引擎，每当虚拟机遇到一个需要使用到变量值的字节码指令时将会执行这个操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;assign&lt;/td&gt;
&lt;td&gt;工作内存&lt;/td&gt;
&lt;td&gt;把一个从执行引擎接收到的值赋接收到的值赋给工作内存的变量，每当虚拟机遇到一个给变量赋值的字节码指令时执行这个操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;store&lt;/td&gt;
&lt;td&gt;工作内存&lt;/td&gt;
&lt;td&gt;把工作内存中的一个变量的值传送到主内存中，以便 write 操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;write&lt;/td&gt;
&lt;td&gt;工作内存&lt;/td&gt;
&lt;td&gt;把 store 操作从工作内存中得到的变量的值放入主内存的变量中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="java" scheme="http://pengzhenjin.top/categories/java/"/>
    
    
      <category term="java" scheme="http://pengzhenjin.top/tags/java/"/>
    
      <category term="jvm" scheme="http://pengzhenjin.top/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>Java虚拟机（二）：垃圾回收器与内存分配策略</title>
    <link href="http://pengzhenjin.top/2019/09/02/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/"/>
    <id>http://pengzhenjin.top/2019/09/02/Java虚拟机（二）：垃圾回收器与内存分配策略/</id>
    <published>2019-09-01T16:00:00.000Z</published>
    <updated>2019-09-01T09:22:55.289Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;垃圾收集 Garbage Collection 通常被称为“GC”，它诞生于1960年 MIT 的 Lisp 语言，经过半个多世纪，目前已经十分成熟了。 jvm 中，程序计数器、虚拟机栈、本地方法栈都是随线程而生随线程而灭，栈帧随着方法的进入和退出做入栈和出栈操作，实现了自动的内存清理，因此，我们的内存垃圾回收主要集中于 java 堆和方法区中，在程序运行期间，这部分内存的分配和使用都是动态的。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://pengzhenjin.top/categories/java/"/>
    
    
      <category term="java" scheme="http://pengzhenjin.top/tags/java/"/>
    
      <category term="jvm" scheme="http://pengzhenjin.top/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>Java虚拟机（一）：Java内存区域与内存溢出异常</title>
    <link href="http://pengzhenjin.top/2019/09/01/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AJava%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E5%BC%82%E5%B8%B8/"/>
    <id>http://pengzhenjin.top/2019/09/01/Java虚拟机（一）：Java内存区域与内存溢出异常/</id>
    <published>2019-08-31T16:00:00.000Z</published>
    <updated>2019-09-01T08:32:39.365Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;进程和线程的区别&quot;&gt;&lt;a href=&quot;#进程和线程的区别&quot; class=&quot;headerlink&quot; title=&quot;进程和线程的区别&quot;&gt;&lt;/a&gt;进程和线程的区别&lt;/h3&gt;&lt;p&gt;进程是资源分配的最小单位，线程是程序执行的最小单位。&lt;/p&gt;&lt;p&gt;进程有自己的独立地址空间，每启动一个进程，系统就会为它分配一个地址空间、建立数据表来维护代码段、堆栈段和数据段，这种操作非常昂贵。而线程是共享进程中的数据的，使用相同的地址空间，因此 CPU 切换一个线程的花费要比进程小很多，同时创建一个线程的开销也要比进程小很多。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://pengzhenjin.top/categories/java/"/>
    
    
      <category term="java" scheme="http://pengzhenjin.top/tags/java/"/>
    
      <category term="jvm" scheme="http://pengzhenjin.top/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>网站导航</title>
    <link href="http://pengzhenjin.top/2019/08/23/%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA/"/>
    <id>http://pengzhenjin.top/2019/08/23/网站导航/</id>
    <published>2019-08-22T16:00:00.000Z</published>
    <updated>2019-08-31T03:52:48.913Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;在线学习&quot;&gt;&lt;a href=&quot;#在线学习&quot; class=&quot;headerlink&quot; title=&quot;在线学习&quot;&gt;&lt;/a&gt;在线学习&lt;/h3&gt;&lt;div class=&quot;note default&quot;&gt;
            &lt;p&gt;&lt;a href=&quot;https://study.163.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网易云课堂&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ke.qq.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;腾讯课堂&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://edu.aliyun.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿里云大学&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://chuanke.baidu.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度传课&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.imooc.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;慕课网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://edu.51cto.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;51CTO学院&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jikexueyuan.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;极客学院&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.maiziedu.com&quot; title=&quot;麦子学院&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;麦子学院&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.icourse163.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中国大学MOOC&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.mooc.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MOOC中国&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.xuetangx.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;学堂在线&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.duobei.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;多贝公开课&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://cn.udacity.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;优达学城&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.udemy.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Udemy&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.coursera.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;coursera&lt;/a&gt;                                                               &lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="网站导航" scheme="http://pengzhenjin.top/categories/%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA/"/>
    
    
      <category term="在线学习" scheme="http://pengzhenjin.top/tags/%E5%9C%A8%E7%BA%BF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="在线课堂" scheme="http://pengzhenjin.top/tags/%E5%9C%A8%E7%BA%BF%E8%AF%BE%E5%A0%82/"/>
    
  </entry>
  
  <entry>
    <title>Hexo常用命令详解</title>
    <link href="http://pengzhenjin.top/2018/08/20/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/"/>
    <id>http://pengzhenjin.top/2018/08/20/Hexo常用命令详解/</id>
    <published>2018-08-19T16:00:00.000Z</published>
    <updated>2019-08-25T14:42:08.236Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerlink&quot; title=&quot;init&quot;&gt;&lt;/a&gt;init&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init [folder]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。&lt;/p&gt;&lt;h3 id=&quot;new&quot;&gt;&lt;a href=&quot;#new&quot; class=&quot;headerlink&quot; title=&quot;new&quot;&gt;&lt;/a&gt;new&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new [layout] &amp;lt;title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://pengzhenjin.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://pengzhenjin.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客（三）：主题美化</title>
    <link href="http://pengzhenjin.top/2018/08/17/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/"/>
    <id>http://pengzhenjin.top/2018/08/17/Hexo搭建个人博客（三）：主题美化/</id>
    <published>2018-08-16T16:00:00.000Z</published>
    <updated>2019-08-26T09:01:43.048Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;自定样式&quot;&gt;&lt;a href=&quot;#自定样式&quot; class=&quot;headerlink&quot; title=&quot;自定样式&quot;&gt;&lt;/a&gt;自定样式&lt;/h3&gt;&lt;p&gt;您可以将所有自定义样式文件放在 &lt;code&gt;hexo-size/source/_data&lt;/code&gt; 目录下。&lt;br&gt;编辑 主题配置文件 &lt;code&gt;_config.yml&lt;/code&gt; ，取消 &lt;code&gt;custom_file_path&lt;/code&gt; 前面的注释。&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;custom_file_path:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #head: source/_data/head.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #header: source/_data/header.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #sidebar: source/_data/sidebar.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #postMeta: source/_data/post-meta.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #postBodyEnd: source/_data/post-body-end.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #footer: source/_data/footer.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #bodyEnd: source/_data/body-end.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #variable: source/_data/variables.styl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #mixin: source/_data/mixins.styl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  style: source/_data/styles.styl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://pengzhenjin.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://pengzhenjin.top/tags/Hexo/"/>
    
      <category term="博客" scheme="http://pengzhenjin.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="NexT" scheme="http://pengzhenjin.top/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客（二）：主题配置</title>
    <link href="http://pengzhenjin.top/2018/08/16/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>http://pengzhenjin.top/2018/08/16/Hexo搭建个人博客（二）：主题配置/</id>
    <published>2018-08-15T16:00:00.000Z</published>
    <updated>2019-08-28T05:41:36.038Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是-NexT-？&quot;&gt;&lt;a href=&quot;#什么是-NexT-？&quot; class=&quot;headerlink&quot; title=&quot;什么是 NexT ？&quot;&gt;&lt;/a&gt;什么是 NexT ？&lt;/h3&gt;&lt;p&gt;Next 是专门为 Hexo 而定制的一款主题。它简单、清新、优雅，一个主题，三种外观，而且还支持多种语言，选您所好。&lt;/p&gt;&lt;h3 id=&quot;配置文件说明&quot;&gt;&lt;a href=&quot;#配置文件说明&quot; class=&quot;headerlink&quot; title=&quot;配置文件说明&quot;&gt;&lt;/a&gt;配置文件说明&lt;/h3&gt;&lt;p&gt;在 Hexo 中有两份主要的配置文件，其名称都是 &lt;code&gt;_config.yml&lt;/code&gt;。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://pengzhenjin.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://pengzhenjin.top/tags/Hexo/"/>
    
      <category term="博客" scheme="http://pengzhenjin.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="NexT" scheme="http://pengzhenjin.top/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客（一）：基础安装</title>
    <link href="http://pengzhenjin.top/2018/08/15/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9F%BA%E7%A1%80%E5%AE%89%E8%A3%85/"/>
    <id>http://pengzhenjin.top/2018/08/15/Hexo搭建个人博客（一）：基础安装/</id>
    <published>2018-08-14T16:00:00.000Z</published>
    <updated>2019-08-26T10:12:55.777Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;随着互联网浪潮的翻腾，国内外已经涌现出越来越多优秀的社交网站让用户分享信息更加便捷。然而，如果你是一个不甘堕落的工程狮或程序猿，是否也想要拥有一个属于自己的博客网站呢？如果你曾经或者现在正有这样的想法，那就请跟随这篇文章，发挥你的Geek精神，让你快速拥有自己的博客网站。文章内容如果有错误，请在文章下面的评论中留言指正，谢谢！&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://pengzhenjin.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://pengzhenjin.top/tags/Hexo/"/>
    
      <category term="博客" scheme="http://pengzhenjin.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="NexT" scheme="http://pengzhenjin.top/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Git：内部原理</title>
    <link href="http://pengzhenjin.top/2018/06/12/Git%EF%BC%9A%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86/"/>
    <id>http://pengzhenjin.top/2018/06/12/Git：内部原理/</id>
    <published>2018-06-11T16:00:00.000Z</published>
    <updated>2019-08-31T02:44:25.650Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;无论是从之前的章节直接跳到本章，还是读完了其余章节一直到这——你都将在本章见识到 Git 的内部工作原理和实现方式。 我们发现学习这部分内容对于理解 Git 的用途和强大至关重要。不过也有人认为这些内容对于初学者而言可能难以理解且过于复杂。 因此我们把这部分内容放在最后一章，在学习过程中可以先阅读这部分，也可以晚点阅读这部分，这取决于你自己。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://pengzhenjin.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://pengzhenjin.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git：自定义</title>
    <link href="http://pengzhenjin.top/2018/06/11/Git%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    <id>http://pengzhenjin.top/2018/06/11/Git：自定义/</id>
    <published>2018-06-10T16:00:00.000Z</published>
    <updated>2019-08-30T10:57:39.074Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;配置-Git&quot;&gt;&lt;a href=&quot;#配置-Git&quot; class=&quot;headerlink&quot; title=&quot;配置 Git&quot;&gt;&lt;/a&gt;配置 Git&lt;/h3&gt;&lt;p&gt;到目前为止，我们已经阐述了 Git 基本的运作机制和使用方式，介绍了许多 Git 提供的工具来帮助你简单且有效地使用它。 在本章，我们将演示如何借助 Git 的一些重要的配置方法和钩子机制，来满足自定义的需求。 通过这些工具，它会和你、你的公司或你的团队配合得天衣无缝。&lt;/p&gt;&lt;p&gt;你在 Git 基础 中看到，可以用 git config 配置 Git。 首先要做的事情就是设置你的名字和邮件地址：&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://pengzhenjin.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://pengzhenjin.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git：工具</title>
    <link href="http://pengzhenjin.top/2018/06/10/Git%EF%BC%9A%E5%B7%A5%E5%85%B7/"/>
    <id>http://pengzhenjin.top/2018/06/10/Git：工具/</id>
    <published>2018-06-09T16:00:00.000Z</published>
    <updated>2019-08-29T10:52:06.577Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;现在，你已经学习了管理或者维护 Git 仓库、实现代码控制所需的大多数日常命令和工作流程。 你已经尝试了跟踪和提交文件的基本操作，并且发挥了暂存区和轻量级的分支及合并的威力。&lt;/p&gt;&lt;p&gt;接下来你将学习一些 Git 的强大功能，这些功能你可能并不会在日常操作中使用，但在某些时候你可能会需要。&lt;/p&gt;&lt;h3 id=&quot;选择修订版本&quot;&gt;&lt;a href=&quot;#选择修订版本&quot; class=&quot;headerlink&quot; title=&quot;选择修订版本&quot;&gt;&lt;/a&gt;选择修订版本&lt;/h3&gt;&lt;p&gt;Git 允许你通过几种方法来指明特定的或者一定范围内的提交。 了解它们并不是必需的，但是了解一下总没坏处。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://pengzhenjin.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://pengzhenjin.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git：分布式</title>
    <link href="http://pengzhenjin.top/2018/06/09/Git%EF%BC%9A%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    <id>http://pengzhenjin.top/2018/06/09/Git：分布式/</id>
    <published>2018-06-08T16:00:00.000Z</published>
    <updated>2019-08-29T02:13:44.180Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;你现在拥有了一个远程 Git 版本库，能为所有开发者共享代码提供服务，在一个本地工作流程下，你也已经熟悉了基本 Git 命令。你现在可以学习如何利用 Git 提供的一些分布式工作流程了。&lt;/p&gt;&lt;p&gt;这一章中，你将会学习如何作为贡献者或整合者，在一个分布式协作的环境中使用 Git。 你会学习为一个项目成功地贡献代码，并接触一些最佳实践方式，让你和项目的维护者能轻松地完成这个过程。另外，你也会学到如何管理有很多开发者提交贡献的项目。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://pengzhenjin.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://pengzhenjin.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git：服务器</title>
    <link href="http://pengzhenjin.top/2018/06/08/Git%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://pengzhenjin.top/2018/06/08/Git：服务器/</id>
    <published>2018-06-07T16:00:00.000Z</published>
    <updated>2019-08-28T14:17:00.841Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;到目前为止，你应该已经有办法使用 Git 来完成日常工作。 然而，为了使用 Git 协作功能，你还需要有远程的 Git 仓库。 尽管在技术上你可以从个人仓库进行推送（push）和拉取（pull）来修改内容，但不鼓励使用这种方法，因为一不留心就很容易弄混其他人的进度。 此外，你希望你的合作者们即使在你的电脑未联机时亦能存取仓库 — 拥有一个更可靠的公用仓库十分有用。 因此，与他人合作的最佳方法即是建立一个你与合作者们都有权利访问，且可从那里推送和拉取资料的共用仓库。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://pengzhenjin.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://pengzhenjin.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git：分支</title>
    <link href="http://pengzhenjin.top/2018/06/07/Git%EF%BC%9A%E5%88%86%E6%94%AF/"/>
    <id>http://pengzhenjin.top/2018/06/07/Git：分支/</id>
    <published>2018-06-06T16:00:00.000Z</published>
    <updated>2019-08-28T05:02:39.186Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。 在很多版本控制系统中，这是一个略微低效的过程——常常需要完全创建一个源代码目录的副本。对于大项目来说，这样的过程会耗费很多时间。&lt;/p&gt;&lt;p&gt;有人把 Git 的分支模型称为它的“必杀技特性”，也正因为这一特性，使得 Git 从众多版本控制系统中脱颖而出。 为何 Git 的分支模型如此出众呢？ Git 处理分支的方式可谓是难以置信的轻量，创建新分支这一操作几乎能在瞬间完成，并且在不同分支之间的切换操作也是一样便捷。 与许多其它版本控制系统不同，Git 鼓励在工作流程中频繁地使用分支与合并，哪怕一天之内进行许多次。 理解和精通这一特性，你便会意识到 Git 是如此的强大而又独特，并且从此真正改变你的开发方式。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://pengzhenjin.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://pengzhenjin.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git：基础</title>
    <link href="http://pengzhenjin.top/2018/06/06/Git%EF%BC%9A%E5%9F%BA%E7%A1%80/"/>
    <id>http://pengzhenjin.top/2018/06/06/Git：基础/</id>
    <published>2018-06-05T16:00:00.000Z</published>
    <updated>2019-08-31T02:48:41.100Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装-Git&quot;&gt;&lt;a href=&quot;#安装-Git&quot; class=&quot;headerlink&quot; title=&quot;安装 Git&quot;&gt;&lt;/a&gt;安装 Git&lt;/h3&gt;&lt;p&gt;在你开始使用 Git 前，需要将它安装在你的计算机上。 即便已经安装，最好将它升级到最新的版本。 你可以通过软件包或者其它安装程序来安装，或者下载源码编译安装。&lt;/p&gt;&lt;h4 id=&quot;在-Linux-上安装&quot;&gt;&lt;a href=&quot;#在-Linux-上安装&quot; class=&quot;headerlink&quot; title=&quot;在 Linux 上安装&quot;&gt;&lt;/a&gt;在 Linux 上安装&lt;/h4&gt;&lt;p&gt;如果你想在 Linux 上用二进制安装程序来安装 Git，可以使用发行版包含的基础软件包管理工具来安装。 如果以 Fedora 上为例，你可以使用 yum：&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://pengzhenjin.top/categories/Git/"/>
    
    
      <category term="Git" scheme="http://pengzhenjin.top/tags/Git/"/>
    
  </entry>
  
</feed>
